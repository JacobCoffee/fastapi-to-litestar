[project]
name = "framework-to-litestar"
version = "0.1.0"
description = "Codemods to transform Python web framework code to Litestar code."
authors = [
    { name = "Jacob Coffee", email = "jacob@z7x.org" }
]
dependencies = [
    "cappa>=0.18.1",
    "typing-extensions>=4.11.0",
    "libcst>=1.1.0",
    "bowler>=0.9.0",
]
readme = "README.md"
requires-python = ">= 3.8"

[project.scripts]
framework-to-litestar = "framework_to_litestar.cli:main"
ftl = "framework_to_litestar.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = []

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["framework_to_litestar"]

[tool.codespell]
count = ''
quiet-level = 3

[tool.ruff]
target-version = "py38"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
    # Things that Ruff Formatter doesn't do well with
    "ISC001", "COM812",
    # Unused args (for now), commented code (for now)
    "ARG002", "ARG001", "ARG004", "ERA001"
]
unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["framework_to_litestar"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.mccabe]
max-complexity = 14

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"**/*.*" = [
    "ANN101",
    "ANN401",
    "ANN102",
    "TD",
    "FIX002",
    "RUF012", # ClassVar Annotations - # TODO: Investigate/Fix
    "FBT001", # Boolean typed positional argument in function definition
    "FBT002", # Boolean default positional argument in function definition
    "FBT003", # Boolean Boolean default positional argument in function definition
    "B008", # Do not perform function calls in argument defaults
]
"src/**/*.*" = ["PLR0913", "SLF001"]
